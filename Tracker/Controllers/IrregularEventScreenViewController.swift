//
//  IrregularEventScreenViewController.swift
//  Tracker
//
//  Created by –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ö–æ—Å–Ω—ã—Ä–µ–≤–∞ on 03.08.2024.
//

import Foundation
import UIKit

final class IrregularEventVC: BaseVCClass {
    private var selectedColorEvent: UIColor?
    private var selectedEmojiEvent: String?
    private let constant = Constants()
    weak var delegate: NewTrackerViewControllerDelegate?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = UIColor(named: "whiteColor")
        createScrollView()
        createConteinerView()
        createEnterTrackerName()
        enterTrackerName.addTarget(self, action: #selector(textChanged), for: .editingChanged)
        createTableView()
        setupButton(
            createButton,
            title: "–°–æ–∑–¥–∞—Ç—å",
            titleColor: UIColor(named: "whiteColor") ?? .white,
            backgroundColor: UIColor(named: "darkGrey"),
            borderColor: nil,
            isEnabled: false,
            isCancelButton: false
        )
        createButton.addTarget(self, action: #selector(createButtonForIrregularEventTapped) , for: .touchUpInside)
        
        setupButton(
            cancelButton,
            title: "–û—Ç–º–µ–Ω–∏—Ç—å",
            titleColor: UIColor(named: "coralColor") ?? .red,
            backgroundColor: UIColor(named: "whiteColor"),
            borderColor: UIColor(named: "coralColor"),
            isEnabled: true,
            isCancelButton: true
        )
        cancelButton.addTarget(self, action: #selector(cancelButtonForIrregularEventTapped) , for: .touchUpInside)
        createNavigation()
        navigationItem.title = "–ù–æ–≤–æ–µ –Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ"
        tableView.register(CustomCellForIrregularEvent.self, forCellReuseIdentifier: CustomCellForIrregularEvent.identifier)
        tableView.delegate = self
        tableView.dataSource = self
    }
    
    //MARK: @objc methods
    
    @objc func cancelButtonForIrregularEventTapped() {
        dismiss(animated: true)
    }
    
    @objc private func createButtonForIrregularEventTapped() {
        guard let newTrackerName = enterTrackerName.text else { return }
        
        // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å DatePicker –∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –∏–∑ –Ω–µ–≥–æ –¥–∞—Ç—É
        let date = Date() // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ datePicker.date
        
        // –°–æ–∑–¥–∞–µ–º DateFormatter
        let dateFormatter = DateFormatter()
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–Ω—è
        dateFormatter.dateFormat = "dd"
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫—É
        let dayString = dateFormatter.string(from: date)
        
        // –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É
        print(dayString) // –≤—ã–≤–æ–¥–∏—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å 14,- —Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä–∏–Ω–≥ 
        
        //let datePickerDate = mainScreen.datePicker.date // —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞
        
        //let dateFormatter = DateFormatter()
        //dateFormatter.dateFormat = " dd "
        
        // let string = dateFormatter.string(from: datePickerDate)
        let stringArray: [String] = [dayString]
        
        let newTracker = Tracker(
            id: UUID(),
            name: newTrackerName,
            color: selectedColorEvent ?? constant.color,
            emoji: selectedEmojiEvent ?? constant.emojiArray.randomElement() ?? "üê∂",
            schedule: stringArray // –∑–¥–µ—Å—å –ª–µ–∂–∏—Ç –æ–¥–Ω–∞ —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –Ω–æ –Ω–∞–º –Ω—É–∂–Ω–∞ —Ç–∞ –∫–æ—Ç–æ—Ä–∞—è –≤ –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≤ –¥—ç–π—Ç –ø–∏–∫–µ—Ä
        )
        delegate?.didCreateNewTracker(newTracker)
        dismiss(animated: true)
    }
}

//MARK: Extensions

extension IrregularEventVC: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 150 / 2
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: CustomCellForIrregularEvent.identifier, for: indexPath) as! CustomCellForIrregularEvent
        cell.textLabel?.text = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è"
        cell.roundCorners(corners: [.layerMinXMinYCorner, .layerMaxXMinYCorner, .layerMaxXMaxYCorner, .layerMinXMaxYCorner], radius: 16)
        cell.backgroundColor = UIColor(named: "greyColor")
        cell.accessoryType = .disclosureIndicator
        cell.separatorInset = UIEdgeInsets(top: 0, left: 0, bottom: 0, right: .greatestFiniteMagnitude) //—É–±–∏—Ä–∞–µ–º –Ω–∏–∂–Ω—é—é —á–µ—Ä—Ç—É
        cell.layoutMargins = UIEdgeInsets.zero
        // cell.setDescription("") —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ç—å –∏ –¥–æ–±–∞–≤–∏—Ç—å —á—Ç–æ –¥–± –≤ detailTextLabel
        return cell
    }
}
